arrange(transcript_name) %>%
column_to_rownames(var = "transcript_name")
colSums(raw_genomic)
colSums(tpm_transcriptome)
#Therefore, a normalization with a scaling factor proportional to the ratio of counts was performed to have the same number of total counts between samples.
median_all_counts = median(colSums(raw_genomic))
scaling_factors = median(colSums(raw_genomic))/colSums(raw_genomic)
normalised_genomic=sweep(raw_genomic, 2, scaling_factors, `*`)
log_normalised_genomic=log1p(normalised_genomic)
melted_data <- reshape2::melt(log_normalised_genomic)
colnames(melted_data) <- c("sample","Log_normalised_expression")
ggplot(melted_data, aes(x = sample, y = Log_normalised_expression, fill = sample)) +
geom_violin() +
labs(title = 'Distribution of Gene Expression Across Samples',
x = 'samples', y = 'Log expression') +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(NA, 2)
#The visualization by the violin plots suggests that all samples have similar gene expression distributions.
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <- (raw_genomic>= 5)
num_filtered_expressed_genes <- rowSums(raw_genomic[expressed,]) == 4
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed,]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <-(raw_genomic>= 5)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed<-rowSums(raw_genomic >= 5)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <-(raw_genomic>= 5)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <-(raw_genomic>= 1)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <-(raw_genomic>= 3)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed <-(raw_genomic>= 2)
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed<-rowSums(raw_genomic)>=5
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
avg_genomic <- rowMeans(raw_genomic)
layout <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
theme_custom <- theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 5),
axis.text = element_text(size = 5),  # Adjust the size as needed
axis.title = element_text(size = 5)  # Optional: Adjust the size of axis titles
)
plot_1 <- ggplot(data = as.data.frame(avg_genomic), mapping =
aes(x = avg_genomic)) +
geom_histogram(
color = "white",
fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50
) +
scale_x_continuous(
breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",
expand = c(0, 0)
) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),
expand = c(0, 0),
trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes",
x = "Average NºReads",
y = "Nºgenes") +
theme_custom
num_detected_genes <- rowSums(raw_genomic > 0)
plot_2 <- ggplot(data = as.data.frame(num_detected_genes), mapping =
aes(x = num_detected_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 23  ) +labs(title = "Number of Genes Detected per Sample",
x = "Number of Samples", y = "Nºgenes") +theme_custom
# filter expressed genes
# threshold: genes must be detected in at least half of the samples
#            or the average counts must be >= 1
expressed<-rowSums(raw_genomic)>=5
num_filtered_expressed_genes<-rowSums(raw_genomic[expressed,]>0)
avg_genomic <- data.frame(avg_genomic)
plot_3 <- ggplot(data = as.data.frame(avg_genomic[expressed,]), mapping =
aes(x = avg_genomic[expressed,])) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],
bins = 50) +
scale_x_continuous(breaks = c(0, 1, 10, 100, 1000, 10000, 20000),
trans = "log1p",expand = c(0, 0)) +
scale_y_continuous(breaks = c(0, 1, 10, 100, 1000, 10000),expand = c(0, 0),trans = "log1p") +
labs(title = "Distribution of Average Expression of All Genes After Filtering",
x = "Average NºReads",
y = "Nºgenes") + theme_custom
plot_4 <- ggplot(data = as.data.frame(num_filtered_expressed_genes), mapping =
aes(x = num_filtered_expressed_genes)) +
geom_histogram(color = "white",fill = brewer.pal(n = 3, name = "Set1")[2],bins = 23) +
labs(title = "Number of Genes Detected per Sample After Filtering",
x = "Number of Samples",y = "Nºgenes") +theme_custom
grid.arrange(plot_1, plot_2, plot_3, plot_4, layout_matrix = layout)
#Plot heatmap
corr_pearson <- cor(log1p(raw_genomic[expressed,]), method = "spearman")
pheatmap(corr_pearson, main="Spearman Correlation Heatmap of Expressed Genomic Data",  cex.axis = 0.7, cex.lab = 0.7, cex.main = 0.8)
# Conclusion
