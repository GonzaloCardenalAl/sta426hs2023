theme(plot.title = element_text(hjust = 0.5))
print(barp_unequal_counts)
unequal_counts = table(cr_counts[rsem != cr_counts])
equal_counts = table(cr_counts[rsem == cr_counts])
barplot_equal_counts = ggplot(data.frame(equal_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = 'identity') +
labs(title = "Distribution of the equal counts between featureCounts and RSEM", x = "Counts", y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
print(barplot_equal_counts)
rsem = rsem[rownames(cr_multimap_counts),]
percentage_unequal_mm<- (sum(rsem != cr_multimap_counts))/(dim(rsem)[1]*dim(rsem)[2])
paste("The percentage of unequal total counts taking into account all the samples is ", round(percentage_unequal_mm,3))
unequal_counts = table(cr_multimap_counts[rsem != cr_multimap_counts])
equal_counts = table(cr_multimap_counts[rsem == cr_multimap_counts])
barplot_equal_counts = ggplot(data.frame(equal_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = 'identity') +
labs(title = "Distribution of the equal counts between featureCounts and RSEM", x = "Counts", y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
print(barplot_equal_counts)
barplot_unequal_counts = ggplot(data.frame(unequal_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = 'identity') +
labs(title = "Distribution of the unequal counts between featureCounts and RSEM", x = "Counts", y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
print(barplot_unequal_counts)
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligend <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
rsem_aligend
colnames(rsem_aligend) <- sample_names
rsem_aligend
cr1_assigned <- sum(colSums(cr1$stat[-1,1]))
cr1 <- readRDS("countResult1.RDS")
cr2 <- readRDS("countResult2.RDS")
cr1_unassigned <- sum(colSums(cr1$stat[-1,-1]))
cr2_unassigned <- sum(colSums(cr2$stat[-1,-1]))
cr1_assigned <- sum(colSums(cr1$stat[1,-1]))
cr1_assigned
cr1_assigned <- cr1$stat[1,-1]))
cr1_assigned <- cr1$stat[1,-1]
cr1_assigned
rsem_alinged[,2] <- cr1_assigned
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_alinged <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_alinged) <- sample_names
cr1_assigned <- cr1$stat[1,-1]
cr2_assigned <- cr2$stat[1,-1]
rsem_alinged[,2] <- cr1_assigned
rsem_alinged[,3] <- cr2_assigned
rsem_alinged[2,] <- cr1_assigned
View(rsem_alinged)
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligned <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_aligned) <- sample_names
cr1_assigned <- cr1$stat[1,-1]
cr2_assigned <- cr2$stat[1,-1]
rsem_aligned[2,] <- cr1_assigned
rsem_aligned[3,] <- cr2_assigned
rsem_aligned
total_counts_rsem
percentage_aligned <- rsem_aligned/total_counts_rsem
percentage_aligned
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligned <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_aligned) <- sample_names
percentage_aligned <- rsem_aligned/total_counts_rsem
percentage_aligned
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligned <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_aligned) <- sample_names
percentage_aligned <- rsem_aligned/total_counts_rsem
difference_aligned <- rsem_aligned-total_counts_rsem
difference_aligned
aligned_df = reshape(rsem_aligned)
library(ggplot2)
library(pheatmap)
library(tidyr)
library(tidyr)
aligned_df = gather(rsem_aligend, key='Aligned_counts')
aligned_df
View(rsem)
colSums(rsem)
aligned_df$total_counts = colSums(rsem)
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = Aligned_counts, y = total_counts , color = rownames(aligned_counts))) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red")
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
View(aligned_df)
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = 'Aligned_counts', y = 'total_counts' , color = rownames(Aligned_counts))) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red")
View(aligned_df)
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = 'Aligned_counts', y = 'total_counts' , color = Samples)) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red") +
theme(plot.title = element_text(hjust = 0.5))
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = Aligned_counts, y = total_counts , color = Samples)) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red") +
theme(plot.title = element_text(hjust = 0.5))
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligned <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_aligned) <- sample_names
percentage_aligned <- rsem_aligned/total_counts_rsem
difference_aligned <- rsem_aligned-total_counts_rsem
difference_aligned
mean(difference_aligned)
mean(difference_aligned)
mean(difference_aligned)
mean(difference_aligned[1])
mean(difference_aligned[1])
difference_aligned
difference_aligned[1]
difference_aligned[,1]
difference_aligned[,]
difference_aligned[1,]
difference_aligned[-1]
difference_aligned[,-1]
difference_aligned[-1,]
total_counts_rsem <- colSums(rsem)
total_counts_rsem
#Load the aligned data from RSEM
rsem_aN1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N1.stat/N1.cnt', n=1), split = " "
)))
rsem_aN2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N2.stat/N2.cnt', n=1), split = " "
)))
rsem_aN3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/N3.stat/N3.cnt', n=1), split = " "
)))
rsem_aT1 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T1.stat/T1.cnt', n=1), split = " "
)))
rsem_aT2 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T2.stat/T2.cnt', n=1), split = " "
)))
rsem_aT3 <- as.numeric(unlist(strsplit(
readLines('RSEM_counts/T3.stat/T3.cnt', n=1), split = " "
)))
rsem_aligned <- data.frame(
rsem_aN1 = rsem_aN1[2],
rsem_aN2 = rsem_aN2[2],
rsem_aN3 = rsem_aN3[2],
rsem_aT1 = rsem_aT1[2],
rsem_aT2 = rsem_aT2[2],
rsem_aT3 = rsem_aT3[2]
)
colnames(rsem_aligned) <- sample_names
percentage_aligned <- rsem_aligned/total_counts_rsem
difference_aligned <- rsem_aligned-total_counts_rsem
difference_aligned
percentage_aligned
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = Aligned_counts, y = total_counts , color = Samples)) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red") +
theme(plot.title = element_text(hjust = 0.5))
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = total_counts, y = Aligned_counts , color = Samples)) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned reads",
x = "Sum RSEM counts",
y = "Number aligned reads")+
geom_abline(intercept = 0, slope = 1, color = "red") +
theme(plot.title = element_text(hjust = 0.5))
aligned_df = gather(rsem_aligend, key='Samples',value ='Aligned_counts')
aligned_df$total_counts = colSums(rsem)
ggplot(data = aligned_df,
mapping = aes(x = total_counts, y = Aligned_counts , color = Samples)) +
geom_point() +
labs(title = "Sum RSEM counts vs. number aligned counts",
x = "Total counts",
y = "Sum of aligned counts")+
geom_abline(intercept = 0, slope = 1, color = "red") +
theme(plot.title = element_text(hjust = 0.5))
#Load the isoform data from RSEM
rsem_iN1 <- read.table('RSEM_counts/N1.isoforms.results', header = TRUE)
rsem_iN2 <- read.table('RSEM_counts/N2.isoforms.results', header = TRUE)
rsem_iN3 <- read.table('RSEM_counts/N3.isoforms.results', header = TRUE)
rsem_iT1 <- read.table('RSEM_counts/T1.isoforms.results', header = TRUE)
rsem_iT2 <- read.table('RSEM_counts/T2.isoforms.results', header = TRUE)
rsem_iT3 <- read.table('RSEM_counts/T3.isoforms.results', header = TRUE)
sample_names <- colnames(cr1$stat)[-1]
rsem_isoforms <- data.frame(
rsem_iN1 = rsem_iN1['expected_count'],
rsem_iN2 = rsem_iN2['expected_count'],
rsem_iN3 = rsem_iN3['expected_count'],
rsem_iT1 = rsem_iT1['expected_count'],
rsem_iT2 = rsem_iT2['expected_count'],
rsem_iT3 = rsem_iT3['expected_count']
)
colnames(rsem_isoforms) <- sample_names
rownames(rsem_isoforms) <- rsem_iN3$transcript_id
correlation_transcripts <- cor(rsem_isoforms)
pheatmap(correlation_transcripts)
View(rsem_isoforms)
View(rsem_iN3)
rsem_iN1_sum <- aggregate(rsem_iN1 ~ gene_id, data = rsem_isoforms, FUN = sum)
View(rsem_iN1)
rsem_iN1_sum <- aggregate(rsem_iN1$expected_count ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN1_sum <- aggregate(rsem_iN1$expected_count ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN1_sum <- aggregate(sample_names[1] ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN1_sum <- aggregate(sample_names[1] ~ gene_id, data = rsem_isoforms, FUN = sum)
View(rsem_isoforms)
sample_names[1]
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN1_sum <- aggregate(sample_names[1] ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
View(rsem_iN1_sum)
rsem_iN1_sum[,1]
rsem_iN1_sum[,2]
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
correlation_iso_genes<- cor(rsem_isoforms_sum, rsem)
pheatmap(correlation_iso_genes)
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
correlation_iso_genes<- cor(rsem_isoforms_sum)
pheatmap(correlation_iso_genes)
View(rsem_isoforms_sum)
View(rsem)
rsem_isoforms_sum <- data.frame(
rsem_isoforms$gene_id, rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
rsem_isoforms_sum <- data.frame(
rownames(rsem),rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rownames(rsem),rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
correlation_iso_genes<- cor(rsem_isoforms_sum, rsem)
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rownames(rsem),rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
correlation_iso_genes<- cor(rsem_isoforms_sum[2:7], rsem)
pheatmap(correlation_iso_genes)
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
correlation_iso_genes<- cor(rsem_isoforms_sum, rsem)
pheatmap(correlation_iso_genes)
rsem_isoforms$gene_id <- rsem_iN3$gene_id
rsem_iN1_sum <- aggregate(STAR_mapped.N1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN2_sum <- aggregate(STAR_mapped.N2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iN3_sum <- aggregate(STAR_mapped.N3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT1_sum <- aggregate(STAR_mapped.T1.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT2_sum <- aggregate(STAR_mapped.T2.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_iT3_sum <- aggregate(STAR_mapped.T3.bam ~ gene_id, data = rsem_isoforms, FUN = sum)
rsem_isoforms_sum <- data.frame(
rsem_iN1_sum[,2], rsem_iN2_sum[,2], rsem_iN3_sum[,2], rsem_iT1_sum[,2], rsem_iT2_sum[,2], rsem_iT3_sum[,2]
)
colnames(rsem_isoforms_sum) <- sample_names
rsem <- data.frame(
rsem_gN1 = rsem_gN1['expected_count'],
rsem_gN2 = rsem_gN2['expected_count'],
rsem_gN3 = rsem_gN3['expected_count'],
rsem_gT1 = rsem_gT1['expected_count'],
rsem_gT2 = rsem_gT2['expected_count'],
rsem_gT3 = rsem_gT3['expected_count']
)
correlation_iso_genes<- cor(rsem_isoforms_sum, rsem)
pheatmap(correlation_iso_genes)
knitr::opts_chunk$set(echo = TRUE)
unequal_counts = table(cr_multimap_counts[rsem != cr_multimap_counts])
equal_counts = table(cr_multimap_counts[rsem == cr_multimap_counts])
barplot_equal_counts = ggplot(data.frame(equal_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = 'identity') +
labs(title = "Distribution of the equal counts between multimapping-featureCounts and RSEM", x = "Counts", y = "Frequency") +
theme(plot.title = element_text(hjust = 0.5))
